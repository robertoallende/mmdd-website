name: Deploy MMDD Website

# Manual deployment trigger - accessible via "Run workflow" button in GitHub UI
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
        - production

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.19.3'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm install
      
    - name: Run linting (if available)
      run: |
        if [ -f "package.json" ] && npm run lint --silent 2>/dev/null; then
          echo "Running linter..."
          npm run lint
        else
          echo "No linting configured - skipping"
        fi
      continue-on-error: false
      
    - name: Build website
      run: npm run build
      
    - name: Download MMDD guide file
      run: |
        echo "📥 Downloading 00_mmdd.md from main MMDD repository..."
        curl -o dist/00_mmdd.md https://raw.githubusercontent.com/robertoallende/micromanaged-driven-development/refs/heads/main/dev_log/00_mmdd.md
        
        # Verify file was downloaded successfully
        if [ -f "dist/00_mmdd.md" ] && [ -s "dist/00_mmdd.md" ]; then
          echo "✅ MMDD guide file downloaded successfully"
          echo "📄 File size: $(wc -c < dist/00_mmdd.md) bytes"
        else
          echo "❌ Error: Failed to download 00_mmdd.md or file is empty"
          exit 1
        fi
      
    - name: Validate build output
      run: |
        echo "Validating build output..."
        
        # Check if dist directory exists
        if [ ! -d "dist" ]; then
          echo "❌ Error: dist/ directory not found"
          exit 1
        fi
        
        # Check if index.html exists
        if [ ! -f "dist/index.html" ]; then
          echo "❌ Error: dist/index.html not found"
          exit 1
        fi
        
        # Check if HTML contains content (basic smoke test)
        if ! grep -q "Micromanaged Driven Development" dist/index.html; then
          echo "❌ Error: Main content not found in built HTML"
          exit 1
        fi
        
        # Check if CSS assets exist
        if ! ls dist/assets/*.css 1> /dev/null 2>&1; then
          echo "❌ Error: CSS assets not found in dist/assets/"
          exit 1
        fi
        
        # Check if JS assets exist  
        if ! ls dist/assets/*.js 1> /dev/null 2>&1; then
          echo "❌ Error: JavaScript assets not found in dist/assets/"
          exit 1
        fi
        
        # Check if MMDD guide file exists and is accessible
        if [ ! -f "dist/00_mmdd.md" ]; then
          echo "❌ Error: 00_mmdd.md not found in build output"
          exit 1
        fi
        
        # Check if image assets exist
        if [ ! -f "dist/images/mmdd-cycle.png" ]; then
          echo "⚠️ Warning: MMDD cycle image not found - checking assets directory"
          if ! ls dist/assets/*mmdd-cycle* 1> /dev/null 2>&1; then
            echo "❌ Error: MMDD cycle image not found in any location"
            exit 1
          else
            echo "✅ MMDD cycle image found in assets directory"
          fi
        else
          echo "✅ MMDD cycle image found in images directory"
        fi
        
        echo "✅ Build validation passed"
        echo "📁 Built files:"
        ls -la dist/
        echo "🎯 Asset files:"
        ls -la dist/assets/ 2>/dev/null || echo "No assets directory found"
        echo "🖼️ Image files:"
        ls -la dist/images/ 2>/dev/null || echo "No images directory found"
        
    - name: Add CNAME file for custom domain
      run: |
        echo "mmdd.dev" > dist/CNAME
        echo "✅ CNAME file created with mmdd.dev"
        
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./dist
        cname: mmdd.dev
        
    - name: Deployment summary
      run: |
        echo "🚀 Deployment completed successfully!"
        echo "📍 Site will be available at: https://mmdd.dev"
        echo "⏰ DNS propagation may take a few minutes"